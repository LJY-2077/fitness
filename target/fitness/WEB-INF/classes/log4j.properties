#定义LOG输出级别
#log4j.rootLogger=INFO,Console,File
log4j.rootCategory=debug,stdout,error
#定义日志输出目的地为控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
#可以灵活地指定日志输出格式，下面一行是指定具体的格式
log4j.appender.Console.layout = org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n

#文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.File = org.apache.log4j.RollingFileAppender
#指定输出目录
log4j.appender.File.File = logs/ssm.log
#定义文件最大大小
log4j.appender.File.MaxFileSize = 10MB
# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志
log4j.appender.File.Threshold = ALL
log4j.appender.File.layout = org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n
# console log
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n

# error log
log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
log4j.appender.error.layout=org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern=%d %p [%c] - %m%n
log4j.appender.error.file=${catalina.base}/logs/cargo_error.log
log4j.appender.error.DatePattern = '_'yyyy-MM-dd'.log'
log4j.appender.error.Threshold=ERROR
log4j.appender.error.append=true

# sql log
log4j.appender.druid=org.apache.log4j.RollingFileAppender
log4j.appender.druid.layout=org.apache.log4j.PatternLayout
log4j.appender.druid.layout.ConversionPattern=%d %p [%c] - %m%n
log4j.appender.druid.file=${catalina.base}/logs/cargo_sql.log
log4j.appender.druid.maxBackupIndex=100
log4j.appender.druid.maxFileSize=5MB
log4j.appender.druid.append=true

#log4j.logger.druid.sql=info,druid
#log4j.logger.druid.sql.DataSource=info,druid
#log4j.logger.druid.sql.Connection=info,druid
log4j.logger.druid.sql.Statement=debug,druid
#log4j.logger.druid.sql.ResultSet=info,druid